{"version":3,"sources":["views/index.js","components/menu-principal.js","views/home.js","views/historico.js","views/config.js","routes.js","App.js","serviceWorker.js","index.js"],"names":["Index","react_default","a","createElement","className","Grid","textAlign","style","height","verticalAlign","Column","maxWidth","Segment","inverted","padded","Header","as","color","Form","size","Input","fluid","icon","iconPosition","placeholder","type","Button","Link","to","MenuPrincipal","Menu","pointing","secondary","Item","name","NavLink","position","React","Component","menu_principal_MenuPrincipal","stacked","Divider","horizontal","columns","divided","Row","Statistic","Value","Label","Historico","Table","celled","selectable","HeaderCell","Body","Cell","ribbon","Footer","colSpan","floated","pagination","Icon","Configuracao","action","labelPosition","content","Routes","react_router_dom","basename","process","react_router","exact","path","component","Home","App","Container","routes","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.bcd435f9.chunk.js","sourcesContent":["import React from 'react';\nimport { Button, Form, Grid, Header, Segment } from 'semantic-ui-react';\nimport { Link } from 'react-router-dom';\n\nconst Index = () => (\n\n    <div className='login-form'>\n\n        <style>{`\n        body > div,\n        body > div > div,\n        body > div > div > div.login-form {\n          height: 100%;\n        }\n      `}\n        </style>\n        <Grid textAlign='center' style={{ height: '100%' }} verticalAlign='middle'>\n            <Grid.Column style={{ maxWidth: 450 }}>\n                <Segment inverted padded=\"very\" className=\"painel-shadow\">\n                    <Header as='h1' color='white' textAlign='center'>\n                        Entrar\n                    </Header>\n                    <Form size='large'>\n                        <Segment inverted>\n                            <Form.Input inverted fluid icon='user' iconPosition='left' placeholder='E-mail' />\n                            <Form.Input\n                                fluid\n                                icon='lock'\n                                iconPosition='left'\n                                placeholder='Senha'\n                                type='password'\n                            />\n\n                            <Button as={Link} to='/home' inverted fluid size='large'>\n                                Login\n                            </Button>\n                        </Segment>\n                    </Form>\n                </Segment>\n            </Grid.Column>\n        </Grid>\n    </div>\n\n)\n\nexport default Index;","import React from 'react';\nimport { Menu, Segment, Grid } from 'semantic-ui-react';\nimport { NavLink } from 'react-router-dom';\n\nexport default class MenuPrincipal extends React.Component {\n\n    render() {\n\n\n        return (\n            <div>\n                <Grid padded=\"vertically\">\n                    <Grid.Column>\n                        <Segment inverted className=\"painel-shadow\">\n                            <Menu inverted pointing secondary>\n                                <Menu.Item name='home' as={NavLink} to='/home' />\n\n                                <Menu.Item\n                                    name='histórico'\n                                    as={NavLink} to='/historico'\n                                />\n\n                                <Menu.Menu position='right'>\n                                    <Menu.Item\n                                        name='configuração'\n                                        as={NavLink} to='/config'\n                                    />\n                                    <Menu.Item\n                                        name='logout'\n                                        as={NavLink} to='/logout'\n                                    />\n                                </Menu.Menu>\n                            </Menu>\n                        </Segment>\n                    </Grid.Column>\n                </Grid>\n            </div>\n        )\n    }\n}\n\n","import React from 'react';\nimport { Segment, Button, Statistic, Divider, Grid } from 'semantic-ui-react';\n\nimport MenuPrincipal from '../components/menu-principal';\n\nclass Index extends React.Component {\n    render() {\n        return (\n            <div>\n                <MenuPrincipal></MenuPrincipal>\n                <Segment inverted padded className=\"painel-shadow\" stacked>\n                    <Segment inverted>\n                        <Divider horizontal inverted>\n                            Atendimento Prioritário\n            </Divider>\n\n                        <Grid columns='equal' divided inverted padded>\n                            <Grid.Row color='black' textAlign='center'>\n                                <Grid.Column>\n                                    <Segment color='black' inverted>\n                                        <Segment inverted>\n                                            <Statistic color='blue' inverted>\n                                                <Statistic.Value>14</Statistic.Value>\n                                                <Statistic.Label>Prioridade</Statistic.Label>\n                                            </Statistic>\n                                        </Segment>\n\n                                    </Segment>\n                                </Grid.Column>\n                                <Grid.Column>\n                                    <Segment color='black' inverted>\n                                        <Statistic color='blue' inverted>\n                                            <Statistic.Value>PR234</Statistic.Value>\n                                            <Statistic.Label>Código Atual</Statistic.Label>\n                                        </Statistic>\n\n                                    </Segment>\n                                </Grid.Column>\n                                <Grid.Column>\n                                    <Segment color='black' inverted>\n                                        <Button size=\"big\" inverted color=\"blue\"> Próximo Prioridade</Button>\n                                    </Segment>\n                                </Grid.Column>\n                            </Grid.Row>\n                        </Grid>\n\n                    </Segment>\n\n                    <Segment inverted>\n                        <Divider horizontal inverted>\n                            Atendimento Normal\n            </Divider>\n\n                        <Grid columns='equal' divided inverted padded>\n                            <Grid.Row color='black' textAlign='center'>\n                                <Grid.Column>\n                                    <Segment color='black' inverted>\n                                        <Segment inverted>\n                                            <Statistic color='green' inverted>\n                                                <Statistic.Value>134</Statistic.Value>\n                                                <Statistic.Label>Fila Normal</Statistic.Label>\n                                            </Statistic>\n                                        </Segment>\n\n                                    </Segment>\n                                </Grid.Column>\n                                <Grid.Column>\n                                    <Segment color='black' inverted>\n                                        <Statistic color='green' inverted>\n                                            <Statistic.Value>PR234</Statistic.Value>\n                                            <Statistic.Label>Código Atual</Statistic.Label>\n                                        </Statistic>\n\n                                    </Segment>\n                                </Grid.Column>\n                                <Grid.Column>\n                                    <Segment color='black' inverted>\n                                        <Button size=\"big\" inverted color=\"green\"> Próximo Normal</Button>\n                                    </Segment>\n                                </Grid.Column>\n                            </Grid.Row>\n                        </Grid>\n\n                    </Segment>\n\n                </Segment>\n            </div>\n        )\n    }\n};\n\nexport default Index;","import React from 'react';\nimport { Segment, Table, Menu, Label, Icon, Divider } from 'semantic-ui-react';\nimport MenuPrincipal from '../components/menu-principal';\n\nconst Historico = () => (\n    <div>\n        <MenuPrincipal/>\n    <Segment inverted padded className=\"painel-shadow\" stacked>\n        <Segment inverted padded >\n            <Divider horizontal inverted>\n                Histórico Atendimento\n            </Divider>\n            <br />\n            <Table celled inverted selectable>\n                <Table.Header>\n                    <Table.Row>\n                        <Table.HeaderCell>Código</Table.HeaderCell>\n                        <Table.HeaderCell>Mesa</Table.HeaderCell>\n                        <Table.HeaderCell>Horário</Table.HeaderCell>\n                    </Table.Row>\n                </Table.Header>\n\n                <Table.Body>\n                    <Table.Row>\n                        <Table.Cell>\n                            <Label color=\"red\" size=\"big\" ribbon>NR124</Label>\n                        </Table.Cell>\n                        <Table.Cell>2</Table.Cell>\n                        <Table.Cell>14:22</Table.Cell>\n                    </Table.Row>\n                    <Table.Row>\n                        <Table.Cell>PR4456</Table.Cell>\n                        <Table.Cell>4</Table.Cell>\n                        <Table.Cell>12:34</Table.Cell>\n                    </Table.Row>\n                    <Table.Row>\n                        <Table.Cell>NR9485</Table.Cell>\n                        <Table.Cell>3</Table.Cell>\n                        <Table.Cell>16:45</Table.Cell>\n                    </Table.Row>\n                </Table.Body>\n\n                <Table.Footer>\n                    <Table.Row>\n                        <Table.HeaderCell colSpan='3'>\n                            <Menu inverted floated='right' pagination>\n                                <Menu.Item as='a' icon>\n                                    <Icon name='chevron left' />\n                                </Menu.Item>\n                                <Menu.Item as='a'>1</Menu.Item>\n                                <Menu.Item as='a'>2</Menu.Item>\n                                <Menu.Item as='a'>3</Menu.Item>\n                                <Menu.Item as='a'>4</Menu.Item>\n                                <Menu.Item as='a' icon>\n                                    <Icon name='chevron right' />\n                                </Menu.Item>\n                            </Menu>\n                        </Table.HeaderCell>\n                    </Table.Row>\n                </Table.Footer>\n            </Table>\n\n        </Segment>\n    </Segment>\n    </div>\n);\n\nexport default Historico;","import React from 'react';\nimport { Segment, Divider, Input } from 'semantic-ui-react';\nimport MenuPrincipal from '../components/menu-principal';\n\nconst Configuracao = () => (\n    <div>\n        <MenuPrincipal/>\n    <Segment inverted padded className=\"painel-shadow\" stacked>\n        <Segment inverted>\n            <Divider horizontal inverted>\n                Configuração de Atendimento\n            </Divider>\n            <Segment inverted>\n                <Input type=\"number\"  inverted action={{ color: 'white', inverted: true, labelPosition: 'left', icon: 'desktop', content: 'Cadastrar' }} placeholder='Código Mesa...' />\n            </Segment>\n        </Segment>\n    </Segment>\n    </div>\n);\n\nexport default Configuracao;","import React from 'react';\nimport { BrowserRouter, Route, Switch, Redirect } from 'react-router-dom';\n\nimport Index from './views/index';\nimport Home from './views/home';\nimport Historico from './views/historico';\nimport Configuracao from './views/config';\n\nconst Routes = () => (\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\n        <Switch>\n            <Route exact path='/' component={Index} />\n            <Route exact path='/home' component={Home} />\n            <Route path='/historico' component={Historico} />\n            <Route path='/config' component={Configuracao} />\n            <Route path='/logout' component={() => <Redirect to='/' />} />\n            <Route path=\"*\" component={() => <Redirect to='/' />} />\n        </Switch>\n    </BrowserRouter>\n);\n\nexport default Routes;","import React from 'react';\nimport Routes from './routes';\nimport './App.css';\nimport { Container } from 'semantic-ui-react';\n\n\nconst App = () => (\n  <Container>\n    <Routes />\n  </Container>\n);\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport 'semantic-ui-css/semantic.min.css'\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}